# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pr: none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: Install Nuget

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
  displayName: Nuget stuff

- task: BatchScript@1
  inputs:
    filename: '$(Build.SourcesDirectory)\src\PokerLeagueManager.UI.Web\BuildAngular.bat'
  displayName: Build angular

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  displayName: Build VS

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  displayName: Run tests


- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**/*dacpac'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true
  displayName: Copy dacpacs

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
      **/*.Commands.WebApi.zip
      **/*.Events.WebApi.zip
      **/*.Queries.WebApi.zip
      **/*.UI.Web.zip
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true
  displayName: Copy zips
    
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\deploy'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\deploy' 
  displayName: Copy deploy

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\src\PokerLeagueManager.Utilities\bin\$(buildConfiguration)'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\Utility'
  displayName: Copy Utility

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: Publish stuff